---
services:
  socket-proxy:
    container_name: socket-proxy
    image: lscr.io/linuxserver/socket-proxy:latest
    restart: unless-stopped
    # ports:
    #   - 2375:2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    read_only: true
    tmpfs:
      - /run
    environment:
      - INFO=1
      - POST=1
      - CONTAINERS=1
      - IMAGES=1
      - NETWORKS=1
      - SERVICES=1
      - TASKS=1
      - VOLUMES=1
    networks:
      - socket-proxy

  authelia:
    container_name: authelia
    image: authelia/authelia:latest
    user: 1000:1000
    restart: always
    ports:
      - 9091:9091
    volumes:
      - ./authelia:/config
    security_opt:
      - no-new-privileges:true    
    labels:
      - traefik.enable=true
      - traefik.http.routers.authelia.entrypoints=websecure
      - traefik.http.routers.authelia.rule=Host(`identity.allfabox.fr`)
      - traefik.http.routers.authelia.tls=true
      - traefik.http.routers.authelia.tls.certresolver=letsencrypt
    environment:
      - TZ=Europe/Paris
    networks:
      - frontend

  traefik:
    container_name: traefik
    image: traefik:v3.0.0
    restart: always
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    depends_on: 
       - socket-proxy
       - authelia
    volumes:
      - ./traefik:/etc/traefik
      - ./traefik/logs:/var/log/traefik
    labels:
      - traefik.enable=true      
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.rule=Host(`traefik.allfabox.fr`)
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/verify?rd=https://identity.allfabox.fr/
      - traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true
      - traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email
      - traefik.http.routers.traefik.middlewares=authelia@docker
    environment:
      - OVH_ENDPOINT=${OVH_ENDPOINT}
      - OVH_APPLICATION_KEY=${OVH_APPLICATION_KEY}
      - OVH_APPLICATION_SECRET=${OVH_APPLICATION_SECRET}
      - OVH_CONSUMER_KEY=${OVH_CONSUMER_KEY}
      - TZ=Europe/Paris
    networks:
      - frontend
      - socket-proxy

  headscale:
    container_name: headscale
    image: headscale/headscale:0.22.3
    restart: unless-stopped
    ports:
      - 8896:8080
    command: headscale serve
    volumes:
      - ./headscale/config:/etc/headscale
      - ./headscale/data:/var/lib/headscale
    labels:
      - traefik.enable=true      
      - traefik.http.routers.headscale.entrypoints=websecure
      - traefik.http.routers.headscale.rule=Host(`headscale.allfabox.fr`)
      - traefik.http.routers.headscale.tls=true
      - traefik.http.routers.headscale.tls.certresolver=letsencrypt
      - traefik.http.services.headscale.loadbalancer.server.port=8896
    networks:
    - frontend

  headscale-webui:
    container_name: headscale-webui
    image: ifargle/headscale-webui:latest
    restart: unless-stopped
    ports:
      - 5000:5000
    volumes:
      - ./headscale/webui:/data
      - ./headscale/config/:/etc/headscale/:ro
    environment:
      - TZ=Europe/Paris
      - PGID=1000
      - PUID=1000
      - COLOR=blue                             # Use the base colors (ie, no darken-3, etc) - 
      - HS_SERVER=http://192.168.10.10:8896    # Reachable endpoint for your Headscale server
      - DOMAIN_NAME=http://192.168.10.10:5000  # The base domain name for this container.
      - SCRIPT_NAME=/admin                     # This is your applications base path (wsgi requires the name "SCRIPT_NAME").  Remove if you are hosing at the root /
      - KEY="dMWV0w7wF5xdMgNPih/uYdA5YsvwKCLYnO1RFxZ0jCs="             # Generate with "openssl rand -base64 32" - used to encrypt your key on disk.
      # - AUTH_TYPE=Basic                      # AUTH_TYPE is either Basic or OIDC.  Empty for no authentication
      - LOG_LEVEL=info                         # Log level.  "DEBUG", "ERROR", "WARNING", or "INFO".  Default "INFO"
      # ENV for Basic Auth (Used only if AUTH_TYPE is "Basic").  Can be omitted if you aren't using Basic Auth
      # - BASIC_AUTH_USER=youruser                   # Used for basic auth
      # - BASIC_AUTH_PASS=some-long-str0n6-pa66word4                  # Used for basic auth
      # ENV for OIDC (Used only if AUTH_TYPE is "OIDC").  Can be omitted if you aren't using OIDC
      #- OIDC_AUTH_URL=https://yourauthserver.com/application/o/headscale/.well-known/openid-configuration # URL for your OIDC issuer's well-known endpoint
      #- OIDC_CLIENT_ID=your-auth-server-client-id-info-here         # Your OIDC Issuer's Client ID for Headscale-WebUI
      #- OIDC_CLIENT_SECRET=your-oidc-auth-server-client-secret-key-will-go-here-and-be-very-long-indeed      # Your OIDC Issuer's Secret Key for Headscale-WebUI
    labels:
      - traefik.enable=true
      - traefik.http.routers.headscale-webui.entrypoints=websecure
      - traefik.http.routers.headscale-webui.rule=Host(`headscale.allfabox.fr`) && (PathPrefix(`/admin/`) || PathPrefix(`/admin`))
      - traefik.http.routers.headscale-webui.tls=true
      - traefik.http.routers.headscale-webui.tls.certresolver=letsencrypt
      - traefik.http.routers.headscale-webui.middlewares=authelia@docker
    networks:
      - frontend

  portainer:
    container_name: portainer
    image: portainer/portainer-ee:latest
    restart: always
    ports:
      - 9443:9443
    depends_on: 
       - socket-proxy
    command: -H tcp://socket-proxy:2375
    volumes:
      - ./portainer:/data    
      - /etc/localtime:/etc/localtime:ro
    environment:
      - AGENT_SECRET="{{ portainer.agent.secret.key }}"
    security_opt:
      - no-new-privileges:true
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.entrypoints=websecure
      - traefik.http.routers.portainer.rule=Host(`portainer.allfabox.fr`)
      - traefik.http.routers.portainer.tls=true
      - traefik.http.routers.portainer.tls.certresolver=letsencrypt
      - traefik.http.services.portainer.loadbalancer.server.port=9443
    networks:
      - frontend
      - socket-proxy

# docker network create --driver=bridge --subnet=172.18.0.0/16 --gateway=172.18.0.1 frontend
networks:
  frontend:
    name: frontend
    driver: bridge
    ipam:
      config:
        - subnet: "172.18.0.0/16"
          gateway: "172.18.0.1"
  socket-proxy:
    name: socket-proxy
    driver: bridge
    ipam:
      config:
        - subnet: "172.19.0.0/16"
          gateway: "172.19.0.1"